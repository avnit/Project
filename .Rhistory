source('~/Downloads/demoData-2.R')
require(TTR)
require(quantmod)
require(PerformanceAnalytics)
require(quantstrat)
source('~/Project/R/demoData-2.R')
install.packages("quantstrat", repos="http://R-Forge.R-project.org")
packrat::disable()
source('~/Project/R/demoData-2.R')
MyData <- read.csv(file = "holdings-xlk.csv", header = TRUE, sep = ",")
source('~/Project/R/demoData-2.R')
getSymbols("ANRI")
getSymbols(ANRI)
symbols <- c("HSY","MDLZ",
"RMCF",
"TR" )
initDate = "2001-01-01"
from="2013-01-01"
to = "2016-01-01"
# download all the data
if ( !"AAPL" %in% ls())
{
#if data is not in the enviornment then get it from Yahoo getSymbol
suppressMessages(
getSymbols(
symbols,from = from, to = to,src = "google"
)
}
stock(symbols,currency = "USD",multiplier = 1)
CCINew <- function(x,n = 10,...)
{
# print(x[,6])
y <- TTR::CCI(x,n = n,...)
out<-y$CCI
#  print(y)
#print(head(out))
out[is.na(out)] <- x[is.na(out)]
colnames(out) <- "cci"
return(out)
}
source('~/Class1/ProjectStart.R')
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SPUX","KHC",
"MDLC","SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB"
)
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SPUX","KHC",
"MDLC","SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB"
)
getSymbols(
stock.str,from = from, to = to, index.class = c('POSIXt','POSIXct'),env =
globalenv(),src = "google"
)
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SBUX","KHC",
"MDLC","SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB"
)
getSymbols(
stock.str,from = from, to = to, index.class = c('POSIXt','POSIXct'),env =
globalenv(),src = "google"
)
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SBUX","KHC",
"SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB"
)
getSymbols(
stock.str,from = from, to = to, index.class = c('POSIXt','POSIXct'),env =
globalenv(),src = "google"
)
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SBUX","KHC",
"SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB","TSN","CPB","TR","HRL","MKC",
"LANC","BGS","LNCE","JBSS","PF","KKD","SONC","JACK","WEN"
)
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SBUX","KHC",
"SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB","TSN","CPB","TR","HRL","MKC",
"LANC","BGS","LNCE","JBSS","PF","KKD","SONC","JACK","WEN","JAMBA"
)
getSymbols(
stock.str,from = from, to = to, index.class = c('POSIXt','POSIXct'),env =
globalenv(),src = "google"
)
lenght(stock.str)
length(stock.str)
,
source('~/Class1/ProjectStart.R')
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SBUX","KHC",
"SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB","TSN","CPB","TR","HRL","MKC",
"LANC","BGS","LNCE","JBSS","PF","KKD","SONC","JACK","WEN","JMBA","MNST","FIZZ",
"JJSF","INGR","RMCF"
)
getSymbols(
stock.str,from = from, to = to, index.class = c('POSIXt','POSIXct'),env =
globalenv(),src = "google"
)
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SBUX","KHC",
"SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB","TSN","CPB","TR","HRL","MKC",
"LANC","BGS","LNCE","JBSS","PF","KKD","SONC","JACK","WEN","JMBA","MNST","FIZZ",
"JJSF","INGR","RMCF","WWY","WWAV","FDP"
)
if (!"HSY" %in% ls())
{
#if data is not in the enviornment then get it from Yahoo getSymbol
suppressMessages(
getSymbols(
stock.str,from = from, to = to, index.class = c('POSIXt','POSIXct'),env =
globalenv(),src = "google"
)
}
View(BGS)
as.data.frame(Quandl("FRED/M04031US35620M267NNBR")) -> matrix
install.packages("devtools")
library(devtools)
install_github('quandl/R-package')
library(Quandl)
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SBUX","KHC",
"SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB","TSN","CPB","TR","HRL","MKC",
"LANC","BGS","LNCE","JBSS","PF","KKD","SONC","JACK","WEN","JMBA","MNST","FIZZ",
"JJSF","INGR","RMCF","WWY","WWAV","FDP","YUM"
)
suppressMessages(
getSymbols(
stock.str,from = from, to = to, index.class = c('POSIXt','POSIXct'),env =
globalenv(),src = "google"
)
source('~/Class1/ProjectStart.R')
install.packages("devtools")
as.data.frame(Quandl("FRED/M04031US35620M267NNBR")) -> matrix
as.data.frame(Quandl("FRED/M04031US35620M267NNBR"))
library(Quandl)
Quandl()
Quandl("FRED/M04031US35620M267NNBR")
source('~/Class1/ProjectStart.R')
as.data.frame(Quandl("FRED/M04031US35620M267NNBR")) -> matrix
stock.str <-  c("HSY","MDLZ", "RMCF", "TR","KO","PEP","SODA","DPS","CAG","GIS","SBUX","KHC",
"SJM","CCE","UN","DF","SYUT","DNKN","MCD","RRGB","TSN","CPB","TR","HRL","MKC",
"LANC","BGS","LNCE","JBSS","PF","KKD","SONC","JACK","WEN","JMBA","MNST","FIZZ",
"JJSF","INGR","RMCF","WWAV","FDP","YUM","CBO","DENN","POST"
)
suppressMessages(
getSymbols(
stock.str,from = from, to = to, index.class = c('POSIXt','POSIXct'),env =
globalenv(),src = "google"
)
matrix
zoo
View(DPS)
source('~/Project/R/InSampleTesting.R')
SharpeRatio2<-tstats[,23]
SharpeRatio2
ggplot(SharpeRatio2)
qqplot(SharpeRatio2)
qqplot(seq(-10,10),SharpeRatio2)
qqplot(seq(-10,10),SharpeRatio2,n=21)
qqplot
qqplot(seq(-10,10),SharpeRatio2,xlab="Variable",ylab="Sharpe Ratio",plot.it=TRUE)
profitRatio<-tstats[,15]
qqplot(seq(-10,10),profitRatio,xlab="Variable",ylab="Profit Ratio",plot.it=TRUE)
plot(seq(-10,10),profitRatio,xlab="Variable",ylab="Profit Ratio")
plot(seq(min(profitRatio),max(profitRatio)),profitRatio,xlab="Variable",ylab="Profit Ratio")
seq(min(profitRatio),max(profitRatio))
seq(min(profitRatio),max(profitRatio),0.001)
plot(seq(min(profitRatio),max(profitRatio),0.001),profitRatio,xlab="Variable",ylab="Profit Ratio")
plot(seq(min(profitRatio),max(profitRatio),((max(profitRatio) - min(profitRation)) / length(profitRatio)),profitRatio,xlab="Variable",ylab="Profit Ratio")
)
qqplot(seq(-10,10),SharpeRatio2,xlab="Variable",ylab="Sharpe Ratio",plot.it=TRUE)
head(tstats)
standardDeviation2<-tstats[,22]
qqplot(seq(-10,10),standardDeviation2,xlab="Variable",ylab="StandardDeviation",plot.it=TRUE)
source('~/Project/R/InSampleTesting.R')
source('~/Project/R/initialize.R')
source('~/Project/R/InSampleTesting.R')
source('~/Project/R/MonteCarlo.R')
spL[[3]]
sPL[[3]]
source('~/Project/R/MonteCarlo.R')
sPL[[7]]
source('~/Project/R/MonteCarlo.R')
